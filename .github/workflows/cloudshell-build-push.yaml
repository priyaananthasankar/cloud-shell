name: Build & Push Cloudshell Images

on:
  push:
    branches:
      - main
  schedule:
    # Run at 5am and 12pm PDT on weekdays
    # 5am PDT is 12pm UTC
    - cron: '0 12 * * 1-5'
    # 12pm PDT is 7pm UTC
    - cron: '0 19 * * 1-5'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        repository: Azure/CloudShell
        path: CloudShell

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to GHCR
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor}}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Generate Tag
      id: tag
      run: |
        cd CloudShell
        echo "image_tag=$(git rev-parse --short HEAD)-$(date '+%Y-%m-%d-%H-%M-%S')" >> $GITHUB_OUTPUT

    - name: Extract metadata labels for base image
      id: base-meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ github.repository }}/base
        tags: |
          type=raw,value=latest
          type=raw,value=${{ steps.tag.outputs.image_tag }}

    - name: Base image
      uses: docker/build-push-action@v6
      with:
        context: CloudShell
        file: CloudShell/linux/base.Dockerfile
        push: true
        tags: ${{ steps.base-meta.outputs.tags }}
        labels: ${{ steps.base-meta.outputs.labels }}

    - name: Extract metadata labels for tools image
      id: tools-meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ github.repository }}/tools
        tags: |
          type=raw,value=latest
          type=raw,value=${{ steps.tag.outputs.image_tag }}

    - name: Tools image
      uses: docker/build-push-action@v6
      with:
        context: CloudShell
        file: CloudShell/linux/tools.Dockerfile
        push: true
        build-args: IMAGE_LOCATION=${{ steps.base-meta.outputs.tags }}
        tags: ${{ steps.tools-meta.outputs.tags }}
        labels: ${{ steps.tools-meta.outputs.labels }}
